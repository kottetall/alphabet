* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Merriweather', serif;
}

*:focus {
    outline: none;
    /* Outline has been replaced with other visual ques and/or outline on specific items*/
}

:root {
    /* VARS */
    --footer-height: 20vh;
    --main-bg: #b4e0f0;
    --top-bg: #5591f8;
}

body {
    background: linear-gradient(var(--top-bg) 15vh, var(--main-bg));
    overflow: hidden;
    height: 100%;
}

footer {
    display: flex;
    position: relative;
    bottom: -100%;
    justify-content: center;
    transition: transform 400ms ease-in-out, scale 2s ease-in-out;
}

.menuCaret {
    --caret-bg: #b1b1e7;
    --caret-btn-size: 80px;

    display: flex;
    position: absolute;
    border-radius: 100%;
    background: var(--caret-bg);
    bottom: 120%;
    transform: translateY(70%);
    padding: 10px;
    height: var(--caret-btn-size);
    width: var(--caret-btn-size);
    justify-content: center;
    border: 4px solid var(--caret-bg);
}

.fa-angle-double-up {
    pointer-events: none;
}

.menuCaret:hover,
.menuCaret:focus {
    cursor: pointer;
    border: 4px solid #0000007a;

}

.hideCaret {
    animation: turnAndMoveReversed 500ms ease-in-out forwards;
}

.showCaret {
    animation: turnAndMove 500ms ease-in-out forwards;

}

footer[aria-hidden=true] {
    transform: translateY(80%);
}

label {
    margin: 5px 0;
}

label[aria-hidden=false]:hover,
label[aria-hidden=false]:focus,
label[aria-hidden=false]:focus-within {
    outline: 1px solid #0000007a;
    outline-offset: 2px;
}

label[aria-hidden=true] {
    display: none;
}

label[aria-hidden=false]:hover,
input:hover,
select:hover {
    cursor: pointer;
}

.main {
    min-height: 100vh;
    max-width: 630px;
    margin: 0 auto;
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    background: var(--main-bg);
}

.end {
    display: none;
    position: absolute;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: plum;
    padding: 30px 0;
    text-align: center;
    z-index: 100;
    animation: fadeIn 1000ms ease;
}

.endtext {
    display: block;
    text-transform: uppercase;
    font-weight: bolder;
    font-size: 16pt;
    letter-spacing: 5px;
}

.rulesHolder {
    /* TEMP */
    display: none !important;
    /* TEMP */
    position: absolute;
    display: flex;
    justify-content: center;
    align-content: center;
}

.rules {
    padding: 20px;
}

.winning {
    display: flex;
    padding-top: 5vh;
    align-content: center;
    justify-content: center;
    flex-wrap: wrap;
    height: 30vh;
    background: var(--top-bg);
    background: linear-gradient(0, var(--main-bg) 4%, var(--top-bg));
}

/* .winning .letterCard {
    background: radial-gradient(#ffffffaa, #ffffff00 80%)
} */

.winning .letterCard .letter {
    font-size: 20pt;
    opacity: 0.5;
}

.winning .letterCard:last-child .letter {
    animation: winner 400ms ease-in-out;
    font-size: 40pt;
    opacity: 1;
}

.winning .letterCard:not(:last-child) .letter {
    transition: opacity 300ms ease-in-out, font-size 300ms ease-in-out;
}

.pool .letterCard.wrong {
    position: relative;
    animation: shake 100ms ease;
}

.letterCard {
    --cardSize: 70px;
    display: inline-flex;
    height: var(--cardSize);
    width: var(--cardSize);
    border-radius: 50%;
}

.pool {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    min-height: 25vh;
    padding: 0 20px;
    margin-bottom: var(--footer-height);
}

.pool .letterCard {
    box-shadow: 2px 2px rgba(0, 0, 0, 0.2);
    background: #fff4f4f5;
}

.pool .letterCard.firstShowing {
    animation: fadeIn 1000ms ease;
}

.pool .letterCard:hover,
.pool .letterCard:focus {
    outline: none;
    cursor: pointer;
    background: #c7c6c6;
}

.pool .obscure {
    opacity: 0.5;
}

.letter {
    align-self: center;
    font-size: 30pt;
    font-weight: bold;
    margin: 0 auto;
    pointer-events: none;
}

.buttons {
    position: relative;
    bottom: 0;
    height: var(--footer-height);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    transition: transform 300ms ease-in-out;
}

footer[aria-hidden=true] .buttons {
    transform: scale(0);
}

.hidden {
    display: none;
}

.maxNum,
.numberOfSuggestions {
    width: 50px;
    padding-left: 5px;
}

.reload {
    --reload-btn-size: 50px;
    --reload-bg: #6565ea;

    height: var(--reload-btn-size);
    width: var(--reload-btn-size);
    padding: 10px;
    border: none;
    border-radius: 100%;
    background: var(--reload-bg);
    color: #fff;
    text-transform: uppercase;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 4px solid var(--reload-bg);
}

.reload:active {
    animation: reloading 200ms ease-in-out forwards;
}

.reload:hover,
.reload:focus {
    cursor: pointer;
    border-color: #0000007a;
}

/* ANIMATIONS */

@keyframes winner {
    0% {
        font-size: 0pt;
    }

    50% {
        font-size: 60pt;
    }

    100% {
        font-size: 40pt;
    }
}

@keyframes shake {
    0% {
        left: 5px;
    }

    25% {
        left: -5px;
    }

    50% {
        left: 10px;
    }

    75% {
        left: -10px;
    }


    100% {
        left: -5px;
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes turnAndMove {
    from {
        transform: rotateZ(0deg) translateY(70%);
    }

    to {
        transform: rotateZ(180deg) translateY(0%);
    }
}

@keyframes turnAndMoveReversed {
    from {
        transform: rotateZ(180deg) translateY(0%);
    }

    to {
        transform: rotateZ(0deg) translateY(70%);
    }
}

@keyframes reloading {
    to {
        transform: rotateZ(360deg);
    }
}